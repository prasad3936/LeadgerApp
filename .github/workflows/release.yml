name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Check out repository
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        pip install --no-cache-dir -r requirements.txt
        pip install pyinstaller

    # Step 4: Debug directory structure to confirm app.py exists
    - name: Debug repository structure
      run: |
        echo "Current Working Directory:"
        pwd
        echo "Repository Structure:"
        ls -R .

    # Step 5: Build the executable
    - name: Build LeadgerDesktop executable
      run: |
        pyinstaller --onefile --name=LeadgerDesktop.1.$(date +'%Y%m%d%H%M%S') --noconsole \
        --add-data "templates:templates" \
        --add-data "instance:instance" \
        --icon=LeadgerApp/icon.ico app.py
        cp -r instance dist/instance
        mv dist LeadgerDesktop_$(date +'%Y%m%d%H%M%S') # Rename dist to package_timestamp

       # Step 6: Tag the release version (e.g., v1.0.0 -> v1.0.1)
    - name: Create tag for release
      run: |
        # Check if there are any existing tags
        current_version=$(git describe --tags --abbrev=0 || echo "v0.0.0")

        # If no tags exist, start with v1.0.0
        if [ "$current_version" == "v0.0.0" ]; then
          new_version="v1.0.0"
        else
          # Increment the version (patch version)
          new_version=$(echo $current_version | awk -F. -v OFS=. '{$NF++;print}')
        fi

        echo "Creating new tag: $new_version"
        
        # Create and push the new tag
        git tag $new_version
        git push origin $new_version


    # Step 7: Create a GitHub Release
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: LeadgerDesktop_*/**
        token: ${{ secrets.GITHUB_TOKEN }}

    # Optional Step 8: Commit and push executable back to the repository (if needed)
    - name: Commit and push executable
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add LeadgerDesktop_$(date +'%Y%m%d%H%M%S')/*
        git commit -m "Build and Package LeadgerApp: Added ${EXECUTABLE_NAME} executable"
        git push "https://${GITHUB_TOKEN}@github.com/prasad3936/LeadgerApp.git" HEAD:main
